"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProcessFormSchema = getProcessFormSchema;
const transport_1 = require("../transport");
function mapJsonSchemaType(jsonPropertyType) {
    switch (jsonPropertyType) {
        case 'string':
            return 'string';
        case 'number':
        case 'integer':
            return 'number';
        case 'boolean':
            return 'boolean';
        case 'object':
            return 'object';
        default:
            return 'string';
    }
}
function mapJsonProperty(key, property) {
    return {
        id: key,
        type: mapJsonSchemaType(property.type),
        displayName: property.title || key,
        defaultMatch: true,
        required: property.required || false,
        display: true,
    };
}
async function getProcessFormSchema() {
    var _a, _b;
    const processId = this.getNodeParameter('process');
    if (!processId) {
        return { fields: [] };
    }
    const ycProcess = await transport_1.apiRequest.call(this, {
        method: 'GET',
        endpoint: `processes/${processId}`,
    });
    const properties = (_b = (_a = ycProcess.parametersSchema) === null || _a === void 0 ? void 0 : _a.properties) !== null && _b !== void 0 ? _b : {};
    if (!properties || Object.keys(properties).length === 0) {
        return { fields: [] };
    }
    const fields = [];
    Object.entries(properties).forEach(([key, property]) => {
        const field = mapJsonProperty(key, property);
        fields.push(field);
    });
    return { fields };
}
//# sourceMappingURL=resourceMapping.js.map